@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using Microsoft.AspNetCore.Http

@inject IHttpContextAccessor HttpContextAccessor
<style>
    .hour-container {
        display: inline-block;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        width: 200px;
        height: 100px;
        margin-right: 10px;
        text-align: center;
        background-color: #6C63FF;
    }

    .hour-item {
        color: white;
        padding-top: 15px;
    }

    .hour-value-body {
        padding: 10px;
    }
</style>


<div id="person-selector"></div>

<div style="height:260px" id="range-selector"></div>


<div style="margin-top:50px; margin-bottom:100px!important;" id="chart"></div>

<div class="hour-container">
    <div class="hour-item">
        <h4>Ledolgozott órák</h4>
        <div class="hour-value-body">
            <p id="worked-label">42 óra 22 perc</p>
        </div>
    </div>
</div>
<div class="hour-container">
    <div class="hour-item">
        <h4>Szünetek</h4>
        <div class="hour-value-body">
            <p id="break-label">42 óra 22 perc</p>
        </div>
    </div>
</div>

<script>
    
    var personsDataSource;
    var selectedPerson //= @HttpContextAccessor.HttpContext.Session.GetString("UserId");
    var GlobalstartDate;
    var GlobalendDate;
    var visible=false;
    var userid //= selectedPerson;
    $.ajax({
        url: '@Url.Content("~/ListGroupMembersForPrincipal")',
        method: "GET",
        async: false,
        success: function (data) {
            //console.log(data);
            personsDataSource = new DevExpress.data.DataSource({
                store: data,
                key: "userId",
                paginate: true,
                pageSize: 10
            });

            $('#person-selector').dxSelectBox({
                dataSource: personsDataSource,
                displayExpr: 'name',
                valueExpr: 'userId',
                onValueChanged: function (e) {
                    //console.log(e.value)
                    selectedPerson = e.value;
                    userid = selectedPerson;
                   
                    $.ajax({
                        url: "/api/UserCheckInGetter/" + userid + "?startDate=" + GlobalstartDate.toISOString() + "&endDate=" + GlobalendDate.toISOString(),
                        method: "GET",
                        success: function (data) {  

                            if (data.length == 0) {
                                hideChart();
                               DevExpress.ui.notify("Nem található belépési adat a felhasználóhoz", "info", 6000);
                            } else {
                                ShowChart();
                                IntervalCalculate(data)
                            }

                        },
                        error: function (error) {
                            hideChart();
                            DevExpress.ui.notify("Nem található belépési adat a felhasználóhoz", "info", 6000);
                        }
                    });
                }
            });
        },
        error: function (error) {
            // handle errors here
        }
    });


    $('#chart').dxChart({

        rotated: true,
        argumentAxis: {
            categories: ['Napok'],
            tick: {
                visible: false,
            },
        },
        title: {
            text: 'Kimutatás ',
        },
        valueAxis: {
            type: 'continuous',
            min: new Date(2023, 3, 1, 0),
            max: new Date(2023, 3, 2, 0),
            tickInterval: { minutes: 30 }
        },
        
        commonSeriesSettings: {
            argumentField: 'date',
            type: 'rangeBar',
            rangeValue1Field: 'start',
            rangeValue2Field: 'end',
            ignoreEmptyPoints: true,
            barOverlapGroup: 'date',
            barWidth: 10,

        },
        seriesTemplate: {
            nameField: 'type',

        },
        legend: {
            title: 'Ledolgozott órák',
            verticalAlignment: 'bottom',
            horizontalAlignment: 'center',
        },
    });

    const chartInstance = $('#chart').dxChart('instance');


    $(function () {

        var rangeSelector = $("#range-selector").dxRangeSelector({
            margin: {
                top: 50,
            },
            scale: {
                startValue: new Date(2023, 1, 1),
                endValue: new Date(2023, 12, 1),
                minorTickInterval: 'day',
                tickInterval: 'week',
                minRange: 'day',
                maxRange: 'month',
                minorTick: {
                    visible: false,
                },
            },
            sliderMarker: {
                format: 'monthAndDay',
            },
            value: [new Date(2023, 1, 28), new Date(2023, 2, 7)],
            title: 'Válasz ki egy intervallumot',

            onValueChanged: function (e) {
                //console.log(userid)
                GlobalendDate = e.value[1]
                GlobalstartDate = e.value[0]
                var startDate = e.value[0];
                var endDate = e.value[1];
                var days = Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24));
                if (userid != undefined) {
                    $.ajax({
                        url: "/api/UserCheckInGetter/" + userid + "?startDate=" + startDate.toISOString() + "&endDate=" + endDate.toISOString(),
                        method: "GET",
                        success: function (data) {
                           
                            

                             if (data.length == 0) {
                                hideChart();
                                DevExpress.ui.notify("Nem található belépési adat a felhasználóhoz az adott intervallumra", "info", 6000);
                            } else {
                                ShowChart();
                                IntervalCalculate(data)
                            }
                            
                        },
                        error: function (error) {
                            hideChart();
                            DevExpress.ui.notify("Nem található belépési adat a felhasználóhoz", "info", 6000);
                        }
                    });
                } else {
                    hideChart();
                }

            }
        }).dxRangeSelector("instance");

        

    });
    
    $(document).ready(function () {
        GlobalendDate =  new Date(2023, 2, 7);
        GlobalstartDate = new Date(2023, 1, 28);
        var startDate = new Date(2023, 1, 28);
        var endDate = new Date(2023, 2, 7);
        var days = Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24));
        if(userid!=undefined){
            $.ajax({
                url: "/api/UserCheckInGetter/" + userid + "?startDate=" + startDate.toISOString() + "&endDate=" + endDate.toISOString(),
                method: "GET",
                success: function (data) {
                    ShowChart();
                    IntervalCalculate(data)
                },
                error: function (error) {
                   hideChart();
                }
            });
        }else{
            hideChart();
        }
    });

</script>